"""empty message

Revision ID: e4a7234c2bfe
Revises: 84923de81400
Create Date: 2023-06-30 09:57:14.172229

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e4a7234c2bfe'
down_revision = '84923de81400'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cmr_review', schema=None) as batch_op:
        batch_op.alter_column('created',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('contract', schema=None) as batch_op:
        batch_op.alter_column('created',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('home_post', schema=None) as batch_op:
        batch_op.alter_column('created',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_constraint('home_post_cmr_profile_id_fkey', type_='foreignkey')
        batch_op.drop_column('cmr_profile_id')

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.alter_column('created',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('message_receiver', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created', sa.DateTime(timezone=True), nullable=False))
        batch_op.add_column(sa.Column('updated', sa.DateTime(timezone=True), nullable=True))

    with op.batch_alter_table('pro_review', schema=None) as batch_op:
        batch_op.alter_column('created',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
        batch_op.alter_column('updated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('pro_review', schema=None) as batch_op:
        batch_op.alter_column('updated',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('message_receiver', schema=None) as batch_op:
        batch_op.drop_column('updated')
        batch_op.drop_column('created')

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.alter_column('updated',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('home_post', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cmr_profile_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('home_post_cmr_profile_id_fkey', 'cmr_profile', ['cmr_profile_id'], ['id'])
        batch_op.alter_column('updated',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('contract', schema=None) as batch_op:
        batch_op.alter_column('updated',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    with op.batch_alter_table('cmr_review', schema=None) as batch_op:
        batch_op.alter_column('updated',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('created',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)

    # ### end Alembic commands ###
